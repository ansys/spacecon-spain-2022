name: GitHub Actions

on:
  pull_request:
  workflow_dispatch:
  push:
    tags:
      - "*"
    branches:
      - main

env:
  PYMAPDL_PORT: 21000  # default won't work on GitHub runners
  PYMAPDL_DB_PORT: 21001  # default won't work on GitHub runners
  PYMAPDL_START_INSTANCE: FALSE
  PYANSYS_OFF_SCREEN: True

  DOCKER_PACKAGE: ghcr.io/pyansys/pymapdl/mapdl
  DOCKER_IMAGE_VERSION_DOCS_BUILD: v22.2.0
  # Following env vars when changed will "reset" the mentioned cache,
  # by changing the cache file name. It is rendered as ...-v%RESET_XXX%-...
  # You should go up in number, if you go down (or repeat a previous value)
  # you might end up reusing a previous cache if it haven't been deleted already.
  # It applies 7 days retention policy by default.
  RESET_PIP_CACHE: 1
  RESET_EXAMPLES_CACHE: 1
  RESET_DOC_BUILD_CACHE: 1
  RESET_AUTOSUMMARY_CACHE: 1

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  stylecheck:
    name: Style Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4.2.0
        with:
          python-version: 3.9
      - name: Install pre-commit
        run: pip install pre-commit
      - name: Run pre-commit
        run: pre-commit run --all-files || ( git status --short ; git diff ; exit 1 )


  docs_build:
    name: Build Documentation
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4.2.0
        with:
          python-version: 3.8

      - name: Install OS packages
        run: |
          sudo apt update
          sudo apt install zip pandoc libgl1-mesa-glx xvfb texlive-latex-extra latexmk

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: Python-v${{ env.RESET_PIP_CACHE }}-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('setup.py') }}-${{ hashFiles('requirements/requirements_docs*.txt') }}
          restore-keys: |
            Python-v${{ env.RESET_PIP_CACHE }}-${{ runner.os }}-${{ matrix.python-version }}

      - name: Test virtual framebuffer
        run: |
          pip install -r .ci/requirements_test_xvfb.txt
          xvfb-run python .ci/display_test.py

      - name: Install ansys-mapdl-core
        run: |
          pip install ansys-mapdl-core
          xvfb-run python -c "from ansys.mapdl import core as pymapdl; print(pymapdl.Report())"

      - name: Login in Github Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.GH_USERNAME }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull, launch, and validate MAPDL service
        run: .ci/start_mapdl.sh
        env:
          LICENSE_SERVER: ${{ secrets.LICENSE_SERVER }}
          MAPDL_IMAGE: '${{ env.DOCKER_PACKAGE }}:${{ env.DOCKER_IMAGE_VERSION_DOCS_BUILD }}'

      - name: Install Docs Build Requirements
        run: |
          pip install -r requirements/requirements_docs.txt

      - name: Build Documentation
        run: |
          xvfb-run make -C doc html SPHINXOPTS="-j auto -W --keep-going"

      - name: Zip documentation
        run: |
          cd doc/build/html
          zip -r PyMAPDL_documentation.zip *

      - name: Upload HTML Documentation
        uses: actions/upload-artifact@v3
        with:
          name: HTML-Documentation
          path: doc/build/html/PyMAPDL_documentation.zip
          retention-days: 7

      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@v4.4.0
        with:
          branch: gh-pages
          folder: doc/build/html
          clean: true

      - name: Build PDF Documentation
        working-directory: doc
        run: make pdf

      - name: Upload PDF Documentation
        uses: actions/upload-artifact@v3
        with:
          name: PDF-Documentation
          path: doc/build/latex/pymapdl*.pdf
          retention-days: 7

      - name: Display files structure
        if: always()
        run: |
          mkdir logs-build-docs
          echo "::group:: Display files structure" && ls -R && echo "::endgroup::"
          ls -R > ./logs-build-docs/files_structure.txt
